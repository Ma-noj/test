package edu.clarivate.ems.service;

import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.HttpStatusCode;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Service;

import edu.clarivate.ems.dao.EmployeeDao;
import edu.clarivate.ems.entity.Employee;
import edu.clarivate.ems.util.ResponseStructure;

@Service
public class EmployeeService {
	@Autowired
	private EmployeeDao employeeDao;

	public ResponseEntity saveEmployee(Employee employee) {
		if (employee != null) {
			employee = employeeDao.saveEmployee(employee);
			ResponseStructure<Employee> responseStructure = new ResponseStructure<>();
			responseStructure.setStatus(201);
			responseStructure.setMessage("Created");
			responseStructure.setData(employee);
			return new ResponseEntity(responseStructure, HttpStatus.CREATED);
		}

		ResponseStructure<Employee> responseStructure = new ResponseStructure<>();
		responseStructure.setStatus(404);
		responseStructure.setMessage("No Data");
		responseStructure.setData(null);

		return new ResponseEntity<T>(responseStructure, HttpStatus.BAD_REQUEST);
	}

	public Employee findByEmployeeId(int employeId) {
		Optional<Employee> optional = employeeDao.findByEmployeeId(employeId);

		if (optional.isPresent()) {
			return optional.get();
		}
		return null;
	}

	public List<Employee> findAllEmployee() {
		return employeeDao.findAllEmployee();
	}

	public String deleteByEmployeeId(int employeeId) {

		Employee employee = findByEmployeeId(employeeId);
		if (employee != null) {
			employeeDao.deleteEmployeById(employeeId);
			return "Employee With the Given Id = " + employeeId + " is Removed!!";
		}
		return "Employee With the Given Id = " + employeeId + " is Not Found!!";

	}

	public String UpdateEmployeeById(int employeeId, Employee employee) {
		Employee exsitingEmployee = findByEmployeeId(employeeId);
		if (exsitingEmployee != null) {
			exsitingEmployee.setEmployeeName(employee.getEmployeeName());
			exsitingEmployee.setEmployeeDesignation(employee.getEmployeeDesignation());
			exsitingEmployee.setEmployeeSalary(employee.getEmployeeSalary());
			saveEmployee(exsitingEmployee);
			return "Employee With the Given Id = " + employeeId + " is Modifyed!!";
		}

		return "Employee With the Given Id = " + employeeId + " is Not Found!!";
	}
}
